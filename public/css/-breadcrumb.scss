.breadcrumb {
  /*centering*/
  display: inline-block;
  box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.35);
  overflow: hidden;
  border-radius: 5px;
  /*Lets add the numbers for each link using CSS counters. flag is the name of the counter. to be defined using counter-reset in the parent element of the links*/
  counter-reset: flag;
  float: left;
}

.breadcrumb * {margin: 0; padding: 0;}
.breadcrumb li {
  @include vbox();
  outline: none;
  float: left;
  //font-size: 12px;
  //line-height: 40px;
  height: 40px;
  /*need more margin on the left of links to accomodate the numbers*/
  padding: 0 10px 0 30px;
  position: relative;
}
/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.breadcrumb li:first-child {
  padding-left: 20px;
  border-radius: 0 0 0 0; /*to match with the parent's radius*/
}
.breadcrumb li:first-child:before {
  left: 14px;
}
.breadcrumb li:last-child {
  border-radius: 0 5px 5px 0; /*this was to prevent glitches on hover*/
}

/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
.breadcrumb li:after {
  content: '';
  position: absolute;
  top: 0;
  right: -20px; /*half of square's length*/
  /*same dimension as the line-height of .breadcrumb a */
  width: 40px;
  height: 40px;
  /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's:
  length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
  if diagonal required = 1; length = 1/1.414 = 0.707*/
  transform: scale(0.707) rotate(45deg);
  /*we need to prevent the arrows from getting buried under the next link*/
  z-index: 1;
  /*background same as links but the gradient will be rotated to compensate with the transform applied*/
  background: #666;
  background: linear-gradient(135deg, #666, #333);
  /*stylish arrow design using box shadow*/
  box-shadow:
          2px -2px 0 2px rgba(0, 0, 0, 0.4),
          3px -3px 0 2px rgba(255, 255, 255, 0.1);
  /*
      5px - for rounded arrows and
      50px - to prevent hover glitches on the border created using shadows*/
  border-radius: 0 5px 0 50px;
}
/*we dont need an arrow after the last link*/
.breadcrumb li:last-child:after {
  content: none;
}

.breadcrumb a {
  color: inherit;
  text-decoration: none;
}

///////////////////////////////////////// Pierre's custom settings:

.breadcrumb {
  font-size: 12px;
  color: #fff;
  text-shadow: 1px 1px 1px #000;

  $colorOut: #0f0;
  $colorOver: #0ff;

  .primary.active:after, .primary:hover:after {
    background: $colorOver;
    background: linear-gradient(135deg, $colorOver, #000);
  }

  .cr-single { padding-right: 20px; }
  .cr-0, .cr-1, .cr-2 { font-weight: bold; }
  .cr-0 { font-size: 150%; }
  .cr-1 { font-size: 120%; }
  .cr-2 { font-size: 110%; }

  .cr-0 {
    width: 110px;
    .icon { margin-right: 5px; }
  }

  li {
    transform-style: flat;

    background: var(--bgColor);
    background: linear-gradient(180deg, var(--bgColor), #333);

    &:after {
      transform-style: flat;
      background: var(--bgColor);
      background: linear-gradient(135deg, var(--bgColor), #333);
    }

    /*hover/active styles*/
    &.active, &:hover {
      background: var(--bgColorHover);
      background: linear-gradient(180deg, var(--bgColorHover), #333);
    }

    &.active:after, &:hover:after {
      background: var(--bgColorHover);
      background: linear-gradient(135deg, var(--bgColorHover), #333);
    }
  }
}